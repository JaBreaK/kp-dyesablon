---
//ini di isi juga
---

<!-- Tambah padding konsisten di seluruh konten -->
<section class="p-6 md:p-10">
  <div class="max-w-5xl mx-auto bg-white dark:bg-gray-800 rounded-3xl shadow-xl p-8 animate-fadeIn">
    <h1 class="text-3xl font-bold mb-6 text-gray-900 dark:text-white">Manajemen Produk</h1>

    <!-- Produk Form -->
    <form id="product-form" class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
      <input type="hidden" id="product-id" />
      <input type="hidden" id="existing-image-url" />

      <div class="md:col-span-2">
        <label for="title" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Judul Produk</label>
        <input id="title" type="text" required placeholder="Masukkan judul"
          class="w-full px-4 py-2 border rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-primary-500 transition-colors" />
      </div>

      <div class="md:col-span-2">
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Kategori</label>
        <div id="categories" class="grid grid-cols-2 gap-2 max-h-40 overflow-auto border rounded-lg p-3 bg-white dark:bg-gray-700">
          <label class="inline-flex items-center space-x-2 p-2 hover:bg-gray-100 dark:hover:bg-gray-600 rounded">
            <input type="checkbox" value="sublimasi" class="category-checkbox rounded text-primary-600" />
            <span class="text-gray-700 dark:text-gray-300">Sublimasi</span>
          </label>
          <label class="inline-flex items-center space-x-2 p-2 hover:bg-gray-100 dark:hover:bg-gray-600 rounded">
            <input type="checkbox" value="jersey" class="category-checkbox rounded text-primary-600" />
            <span class="text-gray-700 dark:text-gray-300">Jersey</span>
          </label>
          <label class="inline-flex items-center space-x-2 p-2 hover:bg-gray-100 dark:hover:bg-gray-600 rounded">
            <input type="checkbox" value="lanyard" class="category-checkbox rounded text-primary-600" />
            <span class="text-gray-700 dark:text-gray-300">Lanyard</span>
          </label>
          <label class="inline-flex items-center space-x-2 p-2 hover:bg-gray-100 dark:hover:bg-gray-600 rounded">
            <input type="checkbox" value="spanduk" class="category-checkbox rounded text-primary-600" />
            <span class="text-gray-700 dark:text-gray-300">Spanduk</span>
          </label>
          <label class="inline-flex items-center space-x-2 p-2 hover:bg-gray-100 dark:hover:bg-gray-600 rounded">
            <input type="checkbox" value="sablon" class="category-checkbox rounded text-primary-600" />
            <span class="text-gray-700 dark:text-gray-300">Sablon</span>
          </label>  
          <label class="inline-flex items-center space-x-2 p-2 hover:bg-gray-100 dark:hover:bg-gray-600 rounded">
            <input type="checkbox" value="kaos" class="category-checkbox rounded text-primary-600" />
            <span class="text-gray-700 dark:text-gray-300">Kaos</span>
          </label>
          <label class="inline-flex items-center space-x-2 p-2 hover:bg-gray-100 dark:hover:bg-gray-600 rounded">
            <input type="checkbox" value="dtf" class="category-checkbox rounded text-primary-600" />
            <span class="text-gray-700 dark:text-gray-300">DTF</span>
          </label>
          <label class="inline-flex items-center space-x-2 p-2 hover:bg-gray-100 dark:hover:bg-gray-600 rounded">
            <input type="checkbox" value="plastisol" class="category-checkbox rounded text-primary-600" />
            <span class="text-gray-700 dark:text-gray-300">Plastisol</span>
          </label>
          <label class="inline-flex items-center space-x-2 p-2 hover:bg-gray-100 dark:hover:bg-gray-600 rounded">
            <input type="checkbox" value="jahit" class="category-checkbox rounded text-primary-600" />
            <span class="text-gray-700 dark:text-gray-300">Jahit</span>
          </label>
          <label class="inline-flex items-center space-x-2 p-2 hover:bg-gray-100 dark:hover:bg-gray-600 rounded">
            <input type="checkbox" value="hoodie" class="category-checkbox rounded text-primary-600" />
            <span class="text-gray-700 dark:text-gray-300">Hoodie</span>
          </label>
          <label class="inline-flex items-center space-x-2 p-2 hover:bg-gray-100 dark:hover:bg-gray-600 rounded">
            <input type="checkbox" value="kemeja" class="category-checkbox rounded text-primary-600" />
            <span class="text-gray-700 dark:text-gray-300">Kemeja</span>
          </label>
          <label class="inline-flex items-center space-x-2 p-2 hover:bg-gray-100 dark:hover:bg-gray-600 rounded">
            <input type="checkbox" value="seragam" class="category-checkbox rounded text-primary-600" />
            <span class="text-gray-700 dark:text-gray-300">Seragam</span>
          </label>
          <label class="inline-flex items-center space-x-2 p-2 hover:bg-gray-100 dark:hover:bg-gray-600 rounded">
            <input type="checkbox" value="jaket" class="category-checkbox rounded text-primary-600" />
            <span class="text-gray-700 dark:text-gray-300">Jaket</span>
          </label>
          <label class="inline-flex items-center space-x-2 p-2 hover:bg-gray-100 dark:hover:bg-gray-600 rounded">
            <input type="checkbox" value="plastisol" class="category-checkbox rounded text-primary-600" />
            <span class="text-gray-700 dark:text-gray-300">Plastisol</span>
          </label>

        </div>
        <p id="category-error" class="text-red-500 text-sm mt-1 hidden">Pilih minimal satu kategori!</p>
      </div>

      <div class="md:col-span-2">
        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Unggah Gambar</label>
        <div id="drop-area"
          class="relative w-full flex flex-col items-center justify-center p-8 border-2 border-dashed border-gray-400 rounded-lg bg-gray-50 dark:bg-gray-700 hover:border-primary-500 cursor-pointer transition-colors">
          <p class="text-gray-500 dark:text-gray-400">Tarik & Lepas atau klik untuk memilih</p>
          <input type="file" id="image-file" accept="image/*"
            class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" />
        </div>
        <p id="file-name" class="mt-2 text-sm italic text-gray-600 dark:text-gray-400"></p>
        <img id="image-preview" class="mt-4 w-full max-h-48 object-contain border rounded-lg shadow hidden" />
      </div>

      <!-- Quill Editor Deskripsi -->
      <div class="md:col-span-2">
        <label for="editor" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Deskripsi</label>
        <div id="editor" class="bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 h-40 rounded-lg"></div>
      </div>

      <div class="md:col-span-2 flex justify-end space-x-4 mt-15">
        <button type="button" id="cancel-btn"
          class="hidden px-4 py-2 bg-gray-400 hover:bg-gray-500 text-white rounded-lg transition-colors">Batal</button>
        <button type="submit" id="submit-btn"
          class="px-6 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg transition-colors flex items-center">
          <span class="submit-text">Simpan</span>
          <svg id="loading-spinner" class="hidden w-5 h-5 ml-2 animate-spin" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
        </button>
      </div>
    </form>

    <!-- Produk Table -->
    <!-- Produk Table -->
<div class="overflow-auto rounded-lg shadow mt-8">
  <table class="min-w-full bg-white dark:bg-gray-800 table-auto">
    <thead class="bg-gray-100 dark:bg-gray-700">
      <tr>
        <th class="px-6 py-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Judul</th>
        <th class="px-6 py-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Kategori</th>
        <th class="px-6 py-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Gambar</th>
        <th class="px-6 py-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Deskripsi</th>
        <th class="px-6 py-3 text-center text-sm font-semibold text-gray-900 dark:text-gray-100">Aksi</th>
      </tr>
    </thead>
    <tbody id="products-table" class="divide-y divide-gray-200 dark:divide-gray-700">
      <!-- Isi akan di-generate dari JavaScript -->
    </tbody>
  </table>
</div>

  </div>
</section>

<!-- Quill core -->
<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
<!-- Supabase & App Logic -->
<script type="module">
  import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
  const SUPABASE_URL = 'https://pmfzypvynmyotmvbgafi.supabase.co';
  const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBtZnp5cHZ5bm15b3RtdmJnYWZpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYxNTcxNTgsImV4cCI6MjA2MTczMzE1OH0.NimEhbTS9Rz_GGXpEABU_rWunPB6TUN7S4ufTS7FNiM';
  const sb = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

  // Quill init
  const quill = new Quill('#editor', {
    theme: 'snow',
    modules: {
      toolbar: [
        [{ header: [1, 2, 3, false] }],
        ['bold', 'italic', 'underline', 'strike'],
        [{ size: ['small', false, 'large', 'huge'] }],
        [{ list: 'ordered' }, { list: 'bullet' }],
        ['link', 'image'],
        ['clean']
      ]
    }
  });

  // Hidden input untuk HTML deskripsi
  const form = document.getElementById('product-form');
  const hiddenDesk = document.createElement('input');
  hiddenDesk.type = 'hidden';
  hiddenDesk.id = 'desk-html';
  hiddenDesk.name = 'desk';
  form.appendChild(hiddenDesk);

  // Utility
  const slugify = str => str.toString().normalize('NFKD').replace(/[^\w\s-]/g, '').toLowerCase().trim().replace(/[^a-z0-9]+/g, '-').replace(/^-+|-+$/g, '');
  const getCategories = () => Array.from(document.querySelectorAll('.category-checkbox:checked')).map(cb => cb.value);

  async function uploadImage(file) {
    const path = `produk/${Date.now()}_${file.name}`;
    const { data, error } = await sb.storage.from('images').upload(path, file, { cacheControl: '3600', upsert: false });
    if (error) throw error;
    return sb.storage.from('images').getPublicUrl(data.path).data.publicUrl;
  }

  async function fetchProducts() {
    try {
      const { data, error } = await sb.from('produk').select('*').order('title', { ascending: true });
      if (error) throw error;
      const tbody = document.getElementById('products-table');
      tbody.innerHTML = data.map(p => `
        <tr class="hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
          <td class="px-4 py-3 text-gray-700 dark:text-gray-300">${p.title}</td>
          <td class="px-4 py-3">${p.categories.join(', ')}</td>
          <td class="px-4 py-3"><img src="${p.image}" class="h-16 rounded-lg shadow" loading="lazy"/></td>
          <td class="px-4 py-3 text-gray-700 dark:text-gray-300 max-w-xs truncate">${p.desk}</td>
          <td class="px-4 py-3 text-center space-x-2">
            <button data-id="${p.id}" class="edit-btn px-3 py-1 rounded text-yellow-500 hover:bg-yellow-50 dark:hover:bg-yellow-900/20 transition-colors">Edit</button>
            <button data-id="${p.id}" class="delete-btn px-3 py-1 rounded text-red-500 hover:bg-red-50 dark:hover:bg-red-900/20 transition-colors">Hapus</button>
          </td>
        </tr>
      `).join('');
    } catch (error) {
      alert('Gagal memuat produk: ' + error.message);
    }
  }

  function resetForm() {
    form.reset();
    document.getElementById('product-id').value = '';
    document.getElementById('existing-image-url').value = '';
    document.getElementById('file-name').textContent = '';
    document.getElementById('image-preview').classList.add('hidden');
    document.getElementById('cancel-btn').classList.add('hidden');
    document.querySelector('.submit-text').textContent = 'Simpan';
    document.getElementById('category-error').classList.add('hidden');
    quill.root.innerHTML = '';
    document.querySelectorAll('.category-checkbox').forEach(cb => cb.checked = false);
  }

  async function enterEdit(id) {
    try {
      const { data, error } = await sb.from('produk').select('*').eq('id', id).single();
      if (error) throw error;
      document.getElementById('product-id').value = data.id;
      document.getElementById('title').value = data.title;
      document.getElementById('existing-image-url').value = data.image;
      quill.root.innerHTML = data.desk;
      document.querySelectorAll('.category-checkbox').forEach(cb => {
        cb.checked = data.categories.includes(cb.value);
      });
      const imgPrev = document.getElementById('image-preview');
      imgPrev.src = data.image;
      imgPrev.classList.remove('hidden');
      document.getElementById('file-name').textContent = 'Gambar saat ini: ' + data.image.split('/').pop();
      document.querySelector('.submit-text').textContent = 'Update';
      document.getElementById('cancel-btn').classList.remove('hidden');
    } catch (error) {
      alert('Gagal memuat produk: ' + error.message);
    }
  }

  async function deleteProduct(id) {
    if (!confirm('Apakah Anda yakin ingin menghapus produk ini?')) return;
    try {
      const { data, error } = await sb.from('produk').select('image').eq('id', id).single();
      if (error) throw error;
      if (data.image) {
        const imgPath = new URL(data.image).pathname.split('/').slice(6).join('/');
        await sb.storage.from('images').remove([imgPath]);
      }
      await sb.from('produk').delete().eq('id', id);
      await fetchProducts();
      alert('Produk berhasil dihapus!');
    } catch (error) {
      alert('Gagal menghapus produk: ' + error.message);
    }
  }

  // Event Listeners
  form.addEventListener('submit', async e => {
    e.preventDefault();

    // Validasi kategori
    const categories = getCategories();
    if (categories.length === 0) {
      document.getElementById('category-error').classList.remove('hidden');
      return;
    }

    // Ambil HTML deskripsi
    hiddenDesk.value = quill.root.innerHTML.trim();

    const submitBtn = document.getElementById('submit-btn');
    const spinner = document.getElementById('loading-spinner');
    submitBtn.disabled = true;
    spinner.classList.remove('hidden');
    document.getElementById('category-error').classList.add('hidden');

    try {
      const id = document.getElementById('product-id').value;
      const title = document.getElementById('title').value.trim();
      const desk = hiddenDesk.value;
      let imageUrl = document.getElementById('existing-image-url').value;
      const file = document.getElementById('image-file').files[0];

      if (file) {
        if (imageUrl) {
          const oldPath = new URL(imageUrl).pathname.split('/').slice(6).join('/');
          await sb.storage.from('images').remove([oldPath]);
        }
        imageUrl = await uploadImage(file);
      }

      const productData = {
        title,
        slug: slugify(title),
        categories,
        desk,
        image: imageUrl
      };

      if (id) {
        await sb.from('produk').update(productData).eq('id', id);
      } else {
        await sb.from('produk').insert([productData]);
      }

      resetForm();
      await fetchProducts();
    } catch (error) {
      alert('Terjadi kesalahan: ' + error.message);
    } finally {
      submitBtn.disabled = false;
      spinner.classList.add('hidden');
    }
  });

  // Drag & Drop
  const dropArea = document.getElementById('drop-area');
  const fileInput = document.getElementById('image-file');
  const fileNameEl = document.getElementById('file-name');
  const imgPrev = document.getElementById('image-preview');

  dropArea.addEventListener('click', () => fileInput.click());
  fileInput.addEventListener('change', () => {
    const file = fileInput.files[0];
    if (file) {
      fileNameEl.textContent = file.name;
      const reader = new FileReader();
      reader.onload = e => {
        imgPrev.src = e.target.result;
        imgPrev.classList.remove('hidden');
      };
      reader.readAsDataURL(file);
    }
  });

  ['dragover','dragleave','drop'].forEach(ev => {
    dropArea.addEventListener(ev, e => {
      e.preventDefault();
      dropArea.classList.toggle('border-primary-500', ev==='dragover');
      if (ev==='drop') {
        const file = e.dataTransfer.files[0];
        if (file && file.type.startsWith('image/')) {
          fileInput.files = e.dataTransfer.files;
          fileNameEl.textContent = file.name;
          const reader = new FileReader();
          reader.onload = e2 => {
            imgPrev.src = e2.target.result;
            imgPrev.classList.remove('hidden');
          };
          reader.readAsDataURL(file);
        }
      }
    });
  });

  document.getElementById('products-table').addEventListener('click', async e => {
    if (e.target.classList.contains('edit-btn')) await enterEdit(e.target.dataset.id);
    if (e.target.classList.contains('delete-btn')) await deleteProduct(e.target.dataset.id);
  });

  // Initialize
  resetForm();
  fetchProducts();
</script>