<section id="hero-carousel" class="relative overflow-hidden h-screen hero-section">
  <!-- Slides Container -->
  <div id="slides" class="absolute inset-0">
    <!-- Slides akan di-inject di sini setelah preload -->
  </div>

  <!-- Dark Overlay for Contrast -->
  <div class="absolute inset-0 bg-black/30 dark:bg-black/50 pointer-events-none"></div>

  <!-- Content -->
  <div class="relative z-10 container-custom flex items-center justify-center h-full">
    <div class="text-white text-center px-4">
      <h1 class="text-4xl sm:text-6xl font-bold">
        <span class="font-brand1 text-[#D4AF37]">DYE</span>
        <span class="font-display">APPAREL</span>
      </h1>
      <p class="mt-4 text-xl">Custom Tanpa Batas</p>
      <a href="https://wa.me/c/6289601651641" target="_blank" class="mt-6 inline-block btn-outline">
        Custom Sekarang
      </a>
    </div>
  </div>
</section>

<script type="module">
  let carouselIntervalId = null;
  let carouselCurrentIndex = 0;
  // Jumlah slide
  const slideCount = 3;
  // Buat array URL slide
  const slideUrls = Array.from({ length: slideCount }, (_, i) =>
    `https://pmfzypvynmyotmvbgafi.supabase.co/storage/v1/object/public/images/HOME/LP-DARK-${i + 1}.jpg`
  );

  // Preload images, kembalikan promise yang resolve dengan URL jika berhasil, null jika gagal
  function preloadImages(urls) {
    const promises = urls.map((url) =>
      new Promise((resolve) => {
        const img = new Image();
        img.src = url;
        img.onload = () => resolve(url);
        img.onerror = () => {
          console.warn('Gagal load image:', url);
          resolve(null);
        };
      })
    );
    return Promise.all(promises);
  }

  function initHeroCarousel() {
    // Hentikan interval lama jika ada
    if (carouselIntervalId) {
      clearInterval(carouselIntervalId);
      carouselIntervalId = null;
    }
    const slidesContainer = document.getElementById('slides');
    if (!slidesContainer) {
      console.warn('Hero carousel: elemen #slides tidak ditemukan');
      return;
    }
    // Kosongkan kontainer agar tidak duplikat
    slidesContainer.innerHTML = '';
    carouselCurrentIndex = 0;

    // Preload dulu
    preloadImages(slideUrls).then((loadedUrls) => {
      // Buat slide div untuk tiap URL
      loadedUrls.forEach((url, idx) => {
        const div = document.createElement('div');
        // Tambahkan kelas blur dan transition
        div.className =
          'absolute inset-0 bg-center bg-cover filter blur-[3px] opacity-0 transition-opacity duration-1000';
        // Pasang inline style untuk optimisasi rendering
        // will-change dan transform untuk memaku layer
        div.style.willChange = 'opacity';
        div.style.transform = 'translateZ(0)';
        // Atur z-index: slide awal (idx=0) bisa z-index 1, berikutnya 0, nanti update saat show
        div.style.zIndex = idx === 0 ? '1' : '0';
        div.dataset.index = idx;
        if (url) {
          div.style.backgroundImage = `url(${url})`;
        } else {
          // fallback jika gagal load
          div.style.backgroundColor = '#111';
        }
        // Jika ini slide pertama (idx 0), tampilkan langsung
        if (idx === 0) {
          div.classList.remove('opacity-0');
          div.classList.add('opacity-100');
        }
        slidesContainer.appendChild(div);
      });

      const slides = slidesContainer.children;
      const totalSlides = slides.length;
      if (totalSlides === 0) {
        console.warn('Tidak ada slide setelah preload');
        return;
      }

      function showSlide(index) {
        const prevIdx = carouselCurrentIndex;
        const newIdx = ((index % totalSlides) + totalSlides) % totalSlides;
        if (newIdx === prevIdx) return;
        const prevSlide = slides[prevIdx];
        const nextSlide = slides[newIdx];

        // Turunkan z-index slide lama ke 0 setelah fade out
        prevSlide.classList.remove('opacity-100');
        prevSlide.classList.add('opacity-0');
        prevSlide.style.zIndex = '0';

        // Tampilkan slide baru di atas
        nextSlide.style.zIndex = '1';
        // Beri sedikit delay minimal supaya z-index diterapkan sebelum opacity
        // Namun karena transition opacity di-handle CSS, ini cukup:
        nextSlide.classList.remove('opacity-0');
        nextSlide.classList.add('opacity-100');

        carouselCurrentIndex = newIdx;
      }

      function nextSlide() {
        showSlide(carouselCurrentIndex + 1);
      }

      // Mulai interval
      carouselIntervalId = setInterval(nextSlide, 5000);
    });
  }

  function cleanupHeroCarousel() {
    if (carouselIntervalId) {
      clearInterval(carouselIntervalId);
      carouselIntervalId = null;
    }
    const slidesContainer = document.getElementById('slides');
    if (slidesContainer) {
      slidesContainer.innerHTML = '';
    }
  }

  // Jika memakai Turbo Drive/Hotwire:
  document.addEventListener('turbo:load', () => {
    initHeroCarousel();
  });
  document.addEventListener('turbo:before-cache', () => {
    cleanupHeroCarousel();
  });
  // Fallback load awal
  document.addEventListener('DOMContentLoaded', () => {
    initHeroCarousel();
  });
</script>
