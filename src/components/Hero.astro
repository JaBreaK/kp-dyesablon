<section id="hero-carousel" class="relative overflow-hidden h-screen hero-section">
  <!-- Slides Container -->
  <div id="slides" class="absolute inset-0">
    <!-- Slides akan di-inject di sini setelah preload -->
  </div>

  <!-- Dark Overlay for Contrast -->
  <div class="absolute inset-0 bg-black/30 dark:bg-black/50"></div>

  <!-- Content -->
  <div class="relative z-10 container-custom flex items-center justify-center h-full">
    <!-- Hero Content -->
    <div class="text-white text-center px-4">
      <h1 class="text-4xl sm:text-6xl font-bold">
        <span class="font-brand1 text-[#D4AF37]">DYE</span>
        <span class="font-display">APPAREL</span>
      </h1>
      <p class="mt-4 text-xl">Custom Tanpa Batas</p>
      <a href="https://wa.me/c/6289601651641" target="_blank" class="mt-6 inline-block btn-outline">
        Custom Sekarang
      </a>
    </div>
  </div>
</section>

<script type="module">
  let carouselIntervalId = null;
  let carouselCurrentIndex = 0;
  // Array URL slide; ubah slideCount sesuai kebutuhan
  const slideCount = 3;
  const slideUrls = [];
  for (let i = 1; i <= slideCount; i++) {
    slideUrls.push(`https://pmfzypvynmyotmvbgafi.supabase.co/storage/v1/object/public/images/HOME/LP-DARK-${i}.jpg`);
  }

  // Preload semua gambar, kembalikan Promise yang resolve ketika semua gambar ter-load
  function preloadImages(urls) {
    const promises = urls.map(src => {
      return new Promise(resolve => {
        const img = new Image();
        img.src = src;
        // Jika sudah cached, onload mungkin tidak dipicu di beberapa browser, tapi umumnya akan dipicu.
        img.onload = () => resolve({ src, success: true });
        img.onerror = () => {
          console.warn('Gagal load image:', src);
          resolve({ src, success: false });
        };
      });
    });
    return Promise.all(promises);
  }

  function initHeroCarousel() {
    // Hentikan interval lama jika ada
    if (carouselIntervalId) {
      clearInterval(carouselIntervalId);
      carouselIntervalId = null;
    }
    const slidesContainer = document.getElementById('slides');
    if (!slidesContainer) {
      console.warn('Hero carousel: elemen #slides tidak ditemukan');
      return;
    }
    // Kosongkan kontainer untuk mencegah duplikat
    slidesContainer.innerHTML = '';
    carouselCurrentIndex = 0;

    // Setelah preload selesai, baru inject slide div dan mulai slideshow
    preloadImages(slideUrls).then(results => {
      // Buat elemen slide untuk setiap URL
      results.forEach((res, idx) => {
        const div = document.createElement('div');
        div.className = 'absolute inset-0 bg-center bg-cover filter blur-[3px] opacity-0 transition-opacity duration-1000';
        div.dataset.index = idx;
        if (res.success) {
          div.style.backgroundImage = `url(${res.src})`;
        } else {
          // Jika gagal load, bisa tampilkan background fallback (misalnya warna gelap kosong)
          div.style.backgroundColor = '#111';
        }
        slidesContainer.appendChild(div);
      });

      // Jika tidak ada slide sama sekali, skip
      const slides = slidesContainer.children;
      if (!slides || slides.length === 0) {
        console.warn('Tidak ada slide ter-generate setelah preload');
        return;
      }

      function showSlide(index) {
        const len = slides.length;
        const idx = ((index % len) + len) % len;
        for (const slide of slides) {
          slide.classList.remove('opacity-100');
          slide.classList.add('opacity-0');
        }
        slides[idx].classList.remove('opacity-0');
        slides[idx].classList.add('opacity-100');
        carouselCurrentIndex = idx;
      }

      function nextSlide() {
        showSlide(carouselCurrentIndex + 1);
      }

      // Tampilkan slide pertama
      showSlide(0);
      // Set interval hanya setelah slide pertama tampil
      carouselIntervalId = setInterval(nextSlide, 5000);
    });
  }

  function cleanupHeroCarousel() {
    if (carouselIntervalId) {
      clearInterval(carouselIntervalId);
      carouselIntervalId = null;
    }
    const slidesContainer = document.getElementById('slides');
    if (slidesContainer) {
      slidesContainer.innerHTML = '';
    }
  }

  // Jika menggunakan Turbo Drive / Hotwire:
  document.addEventListener('turbo:load', () => {
    initHeroCarousel();
  });
  document.addEventListener('turbo:before-cache', () => {
    cleanupHeroCarousel();
  });
  // Fallback untuk load awal tanpa Turbo
  document.addEventListener('DOMContentLoaded', () => {
    initHeroCarousel();
  });
</script>
