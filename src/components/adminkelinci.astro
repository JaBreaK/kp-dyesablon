<section class="p-6">
  <div class="max-w-6xl mx-auto bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-6">
    <!-- Header dengan Search -->
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-8">
      <h1 class="text-3xl font-bold text-gray-900 dark:text-white flex items-center gap-2">
        ðŸ“¦ Manajemen Produk
        <span id="product-count" class="text-lg font-normal text-gray-500"></span>
      </h1>
      <div class="relative w-full md:w-64">
        <input type="text" id="search" placeholder="Cari produk..." 
               class="pl-10 pr-4 py-2 w-full rounded-lg border border-gray-300 dark:border-gray-600 
                      bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100
                      focus:ring-2 focus:ring-primary-500 focus:border-transparent transition-all">
        <svg class="absolute left-3 top-3 h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
        </svg>
      </div>
    </div>

    <!-- Form Section -->
    <div class="bg-gray-50 dark:bg-gray-900 p-6 rounded-xl mb-8 transition-all duration-300">
      <form id="product-form" class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <!-- Input fields tetap... -->

        <!-- Kategori dengan Chips -->
        <div class="md:col-span-2">
          <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">Kategori</label>
          <div id="category-chips" class="flex flex-wrap gap-2"></div>
          <div id="categories" class="hidden">
            <!-- Checkbox kategori tetap... -->
          </div>
        </div>

        <!-- Image Uploader -->
        <div class="md:col-span-2">
          <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">Gambar Produk</label>
          <div id="drop-area" class="group relative aspect-video bg-gray-100 dark:bg-gray-700 rounded-xl 
            border-2 border-dashed border-gray-300 dark:border-gray-600 hover:border-primary-500 
            transition-colors cursor-pointer overflow-hidden">
            <!-- Konten uploader... -->
          </div>
        </div>

        <!-- Tombol dengan Progress -->
        <div class="md:col-span-2 flex justify-end space-x-3">
          <button type="button" id="cancel-btn" 
            class="hidden px-5 py-2.5 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 
                   text-gray-700 dark:text-gray-200 rounded-lg font-medium transition-all duration-200">
            Batal
          </button>
          <button type="submit" id="submit-btn"
            class="px-6 py-2.5 bg-primary-600 hover:bg-primary-700 text-white rounded-lg font-medium
                   transition-all duration-200 flex items-center justify-center min-w-[120px]">
            <span class="submit-text">ðŸ’¾ Simpan</span>
            <div id="loading-spinner" class="hidden ml-2">
              <div class="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
            </div>
          </button>
        </div>
      </form>
    </div>

    <!-- Tabel dengan Fitur Lengkap -->
    <div class="bg-gray-50 dark:bg-gray-900 p-6 rounded-xl">
      <div class="overflow-x-auto rounded-lg border border-gray-200 dark:border-gray-700">
        <table class="min-w-full" id="sortable-table">
          <thead class="bg-gray-100 dark:bg-gray-700">
            <tr>
              <th class="px-5 py-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Produk</th>
              <th class="px-5 py-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Kategori</th>
              <th class="px-5 py-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Deskripsi</th>
              <th class="px-5 py-3 text-center text-sm font-semibold text-gray-900 dark:text-gray-100">Aksi</th>
            </tr>
          </thead>
          <tbody id="products-table" class="divide-y divide-gray-200 dark:divide-gray-700">
            <!-- Data di-generate oleh JS -->
          </tbody>
        </table>
      </div>
    </div>
  </div>
</section>

<script type="module">
  import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js/+esm';
  const SUPABASE_URL = 'https://pmfzypvynmyotmvbgafi.supabase.co';
  const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBtZnp5cHZ5bm15b3RtdmJnYWZpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDYxNTcxNTgsImV4cCI6MjA2MTczMzE1OH0.NimEhbTS9Rz_GGXpEABU_rWunPB6TUN7S4ufTS7FNiM';
  const sb = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

  // Fitur Utama
  const productManager = {
    // Inisialisasi
    init() {
      this.initQuill();
      this.initRealTime();
      this.initEventListeners();
      this.initDragDrop();
      this.fetchProducts();
    },

    // Quill Editor
    initQuill() {
      this.quill = new Quill('#editor', {
        theme: 'snow',
        modules: {
          toolbar: [
            ['bold', 'italic', 'underline'],
            [{ 'header': [1, 2, 3, false] }],
            [{ 'list': 'ordered'}, { 'list': 'bullet' }],
            ['link', 'image'],
            ['clean']
          ]
        }
      });
    },

    // Real-time Updates
    initRealTime() {
      sb.channel('products')
        .on('postgres_changes', { event: '*', schema: 'public', table: 'produk' }, () => this.fetchProducts())
        .subscribe();
    },

    // Drag & Drop
    initDragDrop() {
      let dragged;
      document.querySelectorAll('#sortable-table tr').forEach(row => {
        row.draggable = true;
        
        row.ondragstart = (e) => {
          dragged = row;
          row.classList.add('opacity-50', 'bg-gray-100');
        };

        row.ondragover = (e) => {
          e.preventDefault();
          const afterElement = this.getDragAfterElement(e.clientY);
          if(afterElement) {
            afterElement.parentNode.insertBefore(dragged, afterElement);
          }
        };

        row.ondragend = () => {
          row.classList.remove('opacity-50', 'bg-gray-100');
          this.updateProductOrder();
        };
      });
    },

    // Event Listeners
    initEventListeners() {
      // Form Submit
      document.getElementById('product-form').addEventListener('submit', async (e) => {
        e.preventDefault();
        await this.handleSubmit();
      });

      // Search
      document.getElementById('search').addEventListener('input', this.debounceSearch.bind(this));

      // Table Actions
      document.getElementById('products-table').addEventListener('click', (e) => {
        if(e.target.closest('.edit-btn')) this.handleEdit(e);
        if(e.target.closest('.delete-btn')) this.handleDelete(e);
      });

      // Image Upload
      this.initImageUpload();
    },

    // Handle Form Submit
    async handleSubmit() {
      const formData = this.getFormData();
      
      try {
        this.toggleLoading(true);
        
        if(formData.id) {
          await sb.from('produk').update(formData).eq('id', formData.id);
        } else {
          await sb.from('produk').insert([formData]);
        }

        this.showToast('Produk berhasil disimpan! ðŸŽ‰');
        this.resetForm();
      } catch (error) {
        this.showToast(`Error: ${error.message}`, 'error');
      } finally {
        this.toggleLoading(false);
      }
    },

    // Enhanced Features
    getFormData() {
      return {
        id: document.getElementById('product-id').value,
        title: document.getElementById('title').value.trim(),
        categories: Array.from(document.querySelectorAll('.category-checkbox:checked')).map(cb => cb.value),
        desk: this.quill.root.innerHTML,
        image: document.getElementById('existing-image-url').value
      };
    },

    async fetchProducts(searchQuery = '') {
      try {
        this.toggleSkeleton(true);
        
        let query = sb.from('produk').select('*');
        if(searchQuery) query = query.ilike('title', `%${searchQuery}%`);
        
        const { data } = await query.order('created_at', { ascending: false });
        this.renderProducts(data);
        document.getElementById('product-count').textContent = `(${data.length} produk)`;
      } catch (error) {
        this.showToast(`Gagal memuat produk: ${error.message}`, 'error');
      } finally {
        this.toggleSkeleton(false);
      }
    },

    renderProducts(products) {
      const tbody = document.getElementById('products-table');
      tbody.innerHTML = products.map(product => `
        <tr class="hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors" data-id="${product.id}">
          <td class="px-5 py-4">
            <div class="flex items-center space-x-4">
              <img src="${product.image}" class="w-16 h-16 rounded-lg object-cover shadow" 
                   loading="lazy" alt="${product.title}">
              <div>
                <div class="font-medium text-gray-900 dark:text-gray-100">${product.title}</div>
                <div class="text-sm text-gray-500 dark:text-gray-400">${product.slug}</div>
              </div>
            </div>
          </td>
          <td class="px-5 py-4">
            <div class="flex flex-wrap gap-2">${product.categories.map(c => `
              <span class="category-chip bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-2 py-1 text-sm rounded">
                ${c}
              </span>
            `).join('')}</div>
          </td>
          <td class="px-5 py-4 max-w-[300px]">
            <div class="text-gray-700 dark:text-gray-300 line-clamp-3">
              ${product.desk.replace(/<[^>]*>/g, '')}
            </div>
          </td>
          <td class="px-5 py-4 text-center">
            <div class="flex justify-center space-x-3">
              <button class="edit-btn p-2 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg
                text-blue-600 dark:text-blue-400 transition-colors" title="Edit">
                <!-- Icon edit -->
              </button>
              <button class="delete-btn p-2 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg
                text-red-600 dark:text-red-400 transition-colors" title="Hapus">
                <!-- Icon delete -->
              </button>
            </div>
          </td>
        </tr>
      `).join('');
    },

    // Fitur Tambahan
    debounceSearch(e) {
      clearTimeout(this.searchTimeout);
      this.searchTimeout = setTimeout(() => {
        this.fetchProducts(e.target.value);
      }, 300);
    },

    showToast(message, type = 'success') {
      const toast = document.createElement('div');
      toast.className = `toast-message ${type}`;
      toast.innerHTML = message;
      document.body.appendChild(toast);
      
      setTimeout(() => toast.remove(), 3000);
    },

    toggleLoading(show) {
      const spinner = document.getElementById('loading-spinner');
      const button = document.getElementById('submit-btn');
      button.disabled = show;
      spinner.classList.toggle('hidden', !show);
    },

    toggleSkeleton(show) {
      document.getElementById('skeleton-loading').classList.toggle('hidden', !show);
      document.getElementById('products-table').classList.toggle('opacity-50', show);
    }
  };

  // Inisialisasi
  productManager.init();
</script>.